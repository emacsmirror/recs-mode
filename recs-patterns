("newline previous-line move-end-of-line"
 "You should use `open-line' to do that."
 open-line)

("newline indent-for-tab-command"
 "You should use `newline-and-indent' to do that."
 newline-and-indent)

("forward-paragraph eval-last-sexp"
 "You should use `eval-defun' to do that."
 eval-defun)

("other-window scroll-up"
 "You should use `scroll-other-window' to do that."
 scroll-other-window)

("other-window scroll-down"
 "You should use `scroll-other-window-down' to do that."
 scroll-other-window-down)

("move-beginning-of-line indent-for-tab-command"
 "You should use `back-to-indentation' to do that."
 back-to-indentation)

("other-window \\(find-file\\|ido-find-file\\)"
 "You should use `find-file-other-window' to do that."
 find-file-other-window)

("kill-line \\(kill-line \\|delete-char \\)\\(move-end-of-line newline \\|next-line \\(open-line \\)*\\)yank"
 "You should use `transpose-lines' to do that."
 transpose-lines)

("\\(beginning-of-defun set-mark-command \\(end-of-defun\\|forward-sexp\\)\\|end-of-defun set-mark-command \\(beginning-of-defun\\|backward-sexp\\)\\)"
 "You should use `mark-defun' to do that."
 mark-defun)

;; ("\\(backward-paragraph set-mark-command forward-paragraph\\|forward-paragraph set-mark-command backward-paragraph\\)"
;;  "You should use `mark-paragraph' to do that."
;;  mark-paragraph)

("\\(beginning-of-buffer set-mark-command end-of-buffer\\|end-of-buffer set-mark-command beginning-of-buffer\\)"
 "You should use `mark-whole-buffer' to do that."
 mark-whole-buffer)

("mark-paragraph kill-region \\(backward-paragraph \\|forward-paragraph \\)+yank"
 "You should use `transpose-paragraphs' to do that."
 transpose-paragraphs)

("set-mark-command \\(forward-list \\|backward-list \\)+kill-region \\(forward-list \\|backward-list \\)+\\(newline \\)*yank"
 "You should use `transpose-sexps' to do that."
 transpose-sexps)

("set-mark-command \\(forward-word \\|backward-word \\)kill-region \\(forward-word \\|backward-word \\)+yank"
 "You should use `transpose-words' to do that."
 transpose-words)
